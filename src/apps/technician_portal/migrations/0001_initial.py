# Generated by Django 5.1.2 on 2025-04-04 00:08

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('rewards_referrals', '0002_alter_rewardoption_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('expertise', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=50)),
                ('repair_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('queue_status', models.CharField(choices=[('REQUESTED', 'Customer Requested'), ('PENDING', 'Approval Pending'), ('APPROVED', 'Approved'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('DENIED', 'Denied by Customer')], default='PENDING', max_length=20)),
                ('damage_type', models.CharField(max_length=100)),
                ('drilled_before_repair', models.BooleanField(default=False)),
                ('windshield_temperature', models.FloatField(blank=True, null=True)),
                ('resin_viscosity', models.CharField(blank=True, max_length=50)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='technician_portal.technician')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicianNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('redemption', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rewards_referrals.rewardredemption')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='technician_portal.technician')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnitRepairCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=50)),
                ('repair_count', models.IntegerField(default=0)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
            ],
            options={
                'unique_together': {('customer', 'unit_number')},
            },
        ),
    ]
